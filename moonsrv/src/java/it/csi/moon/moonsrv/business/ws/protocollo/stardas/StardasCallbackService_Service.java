/*
* SPDX-FileCopyrightText: (C) Copyright 2023 C.S.I. Piemonte
*
* SPDX-License-Identifier: EUPL-1.2 */

package it.csi.moon.moonsrv.business.ws.protocollo.stardas;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 3.3.2
  * 2020-06-16T15:55:01.700+02:00
 * Generated source version: 3.3.2
 *
 */
@WebServiceClient(name = "StardasCallbackService",
                  wsdlLocation = "file:conf/wsdl/stardas/StardasCallbackService.wsdl",
                  targetNamespace = "http://www.csi.it/stardas/services/StardasCallbackService")
public class StardasCallbackService_Service extends Service {

    public static final URL WSDL_LOCATION;

    public static final QName SERVICE = new QName("http://www.csi.it/stardas/services/StardasCallbackService", "StardasCallbackService");
    public static final QName StardasCallbackServiceSOAP = new QName("http://www.csi.it/stardas/services/StardasCallbackService", "StardasCallbackServiceSOAP");
    static {
        URL url = null;
        try {
            url = new URL("file:conf/wsdl/stardas/StardasCallbackService.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(StardasCallbackService_Service.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:conf/wsdl/stardas/StardasCallbackService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public StardasCallbackService_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public StardasCallbackService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public StardasCallbackService_Service() {
        super(WSDL_LOCATION, SERVICE);
    }

    public StardasCallbackService_Service(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public StardasCallbackService_Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public StardasCallbackService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns StardasCallbackService
     */
    @WebEndpoint(name = "StardasCallbackServiceSOAP")
    public StardasCallbackService getStardasCallbackServiceSOAP() {
        return super.getPort(StardasCallbackServiceSOAP, StardasCallbackService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns StardasCallbackService
     */
    @WebEndpoint(name = "StardasCallbackServiceSOAP")
    public StardasCallbackService getStardasCallbackServiceSOAP(WebServiceFeature... features) {
        return super.getPort(StardasCallbackServiceSOAP, StardasCallbackService.class, features);
    }

}
